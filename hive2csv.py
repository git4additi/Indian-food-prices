#!/usr/bin/env python3

"""
hive2csv.py

A command-line utility to convert tabular Hive query output (with ASCII-style borders)
into a clean CSV file.

The input files for this script are generated by the Hive CLI as
    hive-server /opt/hive/bin/beeline -u jdbc:hive2://localhost:10000/{db_name} -e "{hive_query}" > {output_file.txt}

Use tools like "https://www.textfixer.com/tools/remove-line-breaks.php" to convert the {hiver_query} to a single line.

Usage:
    python3 hive2csv.py --in input_file.txt --out output_file.csv
"""

import argparse
import os
import sys
import re


def process(input_file: str, output_file: str) -> None:
    with open(input_file, "r") as infile:
        lines = infile.readlines()

        print(f"Processing file: {input_file}, total lines: {len(lines)}")

        itr = 0
        header_parsed = False
        header = []
        rows = []

        while itr < len(lines):
            line = lines[itr].strip()

            # Skip non-table lines
            if not line.startswith(("+", "|")):
                itr += 1
                continue

            # Parse header
            if line.startswith("+"):
                if not header_parsed:
                    if itr + 1 < len(lines) and lines[itr + 1].strip().startswith("|"):
                        header_line = lines[itr + 1].strip()
                        header = header_line[1:-1].split("|")
                        header = [re.sub(r"^\w+\.", "", col.strip()) for col in header]
                        itr += 3  # Skip "+", header, and next "+"
                        header_parsed = True
                        continue
                else:
                    itr += 3
                    continue

            # Parse data rows
            if header_parsed and line.startswith("|"):
                row = line[1:-1].split("|")
                row = [col.strip() for col in row]
                rows.append(row)

            itr += 1

    print(f"Parsed header: {header}")
    print(f"Parsed {len(rows)} rows")

    # Write to output CSV
    with open(output_file, "w") as outfile:
        outfile.write(",".join(header) + "\n")
        for row in rows:
            outfile.write(",".join(row) + "\n")

    print(f"Successfully converted '{input_file}' to '{output_file}'.")


def main():
    parser = argparse.ArgumentParser(description="Hive output to CSV converter")
    parser.add_argument(
        "--in", dest="input_file", required=True, help="Path to the input file"
    )
    parser.add_argument(
        "--out", dest="output_file", required=True, help="Path to the output CSV file"
    )

    args = parser.parse_args()

    if not os.path.isfile(args.input_file):
        print(f"Error: Input file '{args.input_file}' does not exist.")
        sys.exit(1)

    process(args.input_file, args.output_file)


if __name__ == "__main__":
    main()
